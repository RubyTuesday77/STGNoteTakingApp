{"version":3,"sources":["components/Navbar.tsx","components/About.tsx","context/NoteContext.tsx","components/AddNote.tsx","components/NoteItem.tsx","components/Notes.tsx","components/Home.tsx","context/NoteState.tsx","components/Alert.tsx","components/Login.tsx","components/Signup.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Header","navigate","useNavigate","location","useLocation","react_default","a","createElement","Navbar","expand","bg","variant","fixed","Container","fluid","Brand","xmlns","width","height","fill","className","viewBox","d","fill-rule","Toggle","aria-controls","Collapse","id","Nav","style","maxHeight","navbarScroll","Item","dist","concat","pathname","aria-current","to","localStorage","getItem","Button","onClick","removeItem","Form","role","About","NoteContext","createContext","AddNote","props","addNote","useContext","_useState","useState","title","description","tag","_useState2","Object","slicedToArray","note","setNote","onChange","e","objectSpread","defineProperty","target","name","value","Group","Label","Control","type","aria-describedby","minLength","required","as","rows","preventDefault","showAlert","NoteItem","deleteNote","updateNote","Accordion","defaultActiveKey","eventKey","fontWeight","Body","_id","Notes","context","notes","getNotes","editNote","useEffect","ref","useRef","refClose","eid","etitle","edescription","etag","currentNote","current","click","Fragment","data-bs-toggle","data-bs-target","aria-labelledby","aria-hidden","data-bs-dismiss","aria-label","disabled","length","map","components_NoteItem","key","Home","components_Notes","components_AddNote","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","NoteState","host","setNotes","_ref","asyncToGenerator","_callee","response","json","_context","fetch","headers","Content-Type","auth-token","apply","arguments","_ref2","_callee2","_context2","body","JSON","stringify","_x","_x2","_x3","_ref3","_callee3","newNotes","_context3","filter","_x4","_ref4","_callee4","index","_context4","parse","_x5","_x6","_x7","_x8","context_NoteContext","Provider","children","Alert","alert","word","lower","toLowerCase","toUpperCase","capitalize","msg","Login_regeneratorRuntime","Login","email","password","credentials","setCredentials","handleSubmit","success","setItem","authToken","onSubmit","autoComplete","Text","Signup_regeneratorRuntime","Signup","cpassword","_useState3","_useState4","confirmPwd","setConfirmPwd","color","App","setAlert","message","setTimeout","context_NoteState","components_Navbar","components_Alert","react_router_dist","path","element","components_Home","components_About","components_Login","components_Signup","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","react","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.1e9a2075.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nconst Header = () => {\n    let navigate = useNavigate();\n\n    const handleLogout = () => {\n        localStorage.removeItem('authToken');\n        navigate('/login');\n    };\n\n    let location = useLocation();\n\n    return (\n        <Navbar expand='lg' bg='dark' variant=\"dark\" fixed='top'>\n            <Container fluid>\n                <Navbar.Brand>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-pencil-square\" viewBox=\"0 0 16 16\">\n                        <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                        <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n                    </svg>\n                    STG Note-Taker\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n                <Navbar.Collapse id='responsive-navbar-nav'>\n                    <Nav className='me-auto my-2 my-lg-0' style={{ maxHeight: '100px' }} navbarScroll>\n                        <Nav.Item>\n                            <Link className={ `nav-link ${location.pathname === '/' ? 'active' : ''}` } aria-current='page' to='/'>HOME</Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Link className={ `nav-link ${location.pathname === '/about' ? 'active' : ''}` } to='/about'>ABOUT</Link>\n                        </Nav.Item>\n                    </Nav>\n                    <Nav>\n                        {!localStorage.getItem('authToken')\n                        ?\n                            <Form className='d-flex' role='search'>\n                                <Link className='btn btn-primary mx-1' to='/login' role='button'>LOG IN</Link>\n                                <Link className='btn btn-primary mx-1' to='/signup' role='button'>SIGN UP</Link>\n                            </Form>\n                        : \n                            <Button onClick={ handleLogout } className='btn btn-primary mx-1' >LOG OUT</Button>}\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    );\n\n};\n\nexport default Header;","import React from 'react';\n\nconst About = () => {\n    return (\n      <h5>STG Note-Taker was developed by GangCao, Samuel Smith and Tyson Lannon in 2022 as project for a Software/Web Delvelopment Bootcamp!</h5>\n    )\n}\n\nexport default About;","import { createContext } from 'react';\n\n// Create context\n// @ts-ignore\nconst NoteContext = createContext();\n\nexport default NoteContext;","import React, { useContext, useState } from 'react';\nimport NoteContext from '../context/NoteContext';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\n\nconst AddNote = (props: { showAlert: (arg0: string, arg1: string) => void; }) => {\n    const context = useContext(NoteContext);\n    // @ts-ignore\n    const { addNote } = context;\n\n    const [note, setNote] = useState({\n        title: '',\n        description: '',\n        tag: '',\n    });\n\n    const onChange = (e: { target: { name: any; value: any; }; }) => {\n        setNote({\n            ...note,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleClick = (e: { preventDefault: () => void; }) => {\n        e.preventDefault();\n        addNote(note.title, note.description, note.tag);\n        setNote({ title: '', description: '', tag: '' });\n        props.showAlert('Added new note successfully', 'success');\n    };\n\n    return (\n        <Container className='my-3' style={{ width: '80%' }}>\n            <h2>Add a Note</h2>\n            <Form>\n                <Form.Group className='mb-3'>\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control type='text' value={ note.title } id='title' name='title' aria-describedby='emailHelp' minLength={ 2 } required onChange={ onChange } />\n                </Form.Group>\n                <Form.Group className='mb-3'>\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control type='text' as='textarea' rows={ 3 } id='description' name='description' value={ note.description } onChange={ onChange } />\n                </Form.Group>\n                <Form.Group className='mb-3'>\n                    <Form.Label>Tags/Keywords</Form.Label>\n                    <Form.Control type='text' id='tag' name='tag' value={ note.tag } onChange={ onChange } />\n                </Form.Group>\n                <Button type='submit' variant='primary' onClick={ handleClick }>Save Note</Button>\n            </Form>\n        </Container>\n    );\n};\n\n\nexport default AddNote;","import React, { useContext } from 'react';\nimport NoteContext from '../context/NoteContext';\nimport Accordion from \"react-bootstrap/Accordion\";\n\n\n\nconst NoteItem = (props: { showAlert?: any; note?: any; updateNote?: any; }) => {\n  const context = useContext(NoteContext);\n  // @ts-ignore\n  const { deleteNote } = context;\n  const { note, updateNote } = props;\n\n  return (\n    <Accordion defaultActiveKey=\"1\">\n      <Accordion.Item eventKey=\"1\">\n        <Accordion.Header style={{ fontWeight: \"bold\" }}>\n          {note.title}\n        </Accordion.Header>\n        <Accordion.Body>\n          <p>{note.description}</p>\n          {/* Clicking on the trashcan icon will call the delete function and pass the note id \n                    of that particular note. We are getting the note id as each and every element(object)\n                    represents a card which has its id,t,d,tag*/}\n          <i\n            className=\"fas fa-trash mx-2\"\n            onClick={() => {\n              deleteNote(note._id);\n              props.showAlert(\"Deleted succesfully\", \"success\");\n            }}\n          ></i>\n          <i\n            className=\"fas fa-edit mx-2\"\n            onClick={() => {\n              updateNote(note);\n            }}\n          ></i>\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n  );\n};\n\nexport default NoteItem","import React, { useContext, useEffect, useRef, useState } from 'react'\nimport NoteItem from './NoteItem';\nimport NoteContext from '../context/NoteContext';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Container';\n\n\nconst Notes = (props: { showAlert: (arg0: string, arg1: string) => void; }) => {\n    let navigate = useNavigate();\n\n    const context = useContext(NoteContext);\n    // @ts-ignore\n    const { notes, getNotes, editNote } = context;\n\n    useEffect(() => {\n        if(localStorage.getItem('authToken')) {\n            getNotes();\n        }\n        else {\n            navigate('/login');\n        }\n    }, []);\n\n    const ref = useRef(null);\n    const refClose = useRef(null);\n\n    const [note, setNote] = useState({\n        eid: '',\n        etitle: '',\n        edescription: '',\n        etag: ''\n    });\n\n    const updateNote = (currentNote: { _id: string; title: string; description: string; tag: string | null; }) => {\n        // @ts-ignore\n        ref.current.click();\n        setNote({\n          eid: currentNote._id,\n          etitle: currentNote.title,\n          edescription: currentNote.description,\n          // @ts-ignore\n          etag: currentNote.tag,\n        });\n    };\n\n    const onChange = (e: { target: { name: any; value: any; }; }) => {\n        setNote({\n            ...note,\n            [e.target.name]: e.target.value\n        });\n    };\n\n\n\n    const handleClick = () => {\n        // @ts-ignore\n        refClose.current.click();\n        editNote(note.eid, note.etitle, note.edescription, note.etag);\n        props.showAlert('Note updated successfully!', 'success');\n    };\n\n    return (\n        <>\n            <div>\n                <Button type=\"button\" ref={ ref } className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\n                    Launch demo modal\n                </Button>\n                <Modal className=\"modal fade\" id=\"exampleModal\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                    <div className='modal-dialog'>\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Edit Note</h5>\n                                <Button className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></Button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <Form>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label>Edit Title</Form.Label>\n                                        <Form.Control type=\"text\" minLength={ 3 } required  id=\"etitle\" name=\"etitle\" value={note.etitle} aria-describedby=\"emailHelp\" onChange={ onChange } />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label>Edit Content</Form.Label>\n                                        <Form.Control type=\"text\" id=\"edescription\" name=\"edescription\" value={ note.edescription } onChange={ onChange } />\n                                    </Form.Group>\n                                    <Form.Group className=\"mb-3\">\n                                        <Form.Label>Edit Tags/Keywords</Form.Label>\n                                        <Form.Control type=\"text\" id=\"etag\" name=\"etag\" value={ note.etag } onChange={ onChange } />\n                                    </Form.Group>\n                                </Form>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <Button ref={ refClose } variant=\"secondary\" data-bs-dismiss=\"modal\">Close</Button>\n                                <Button variant='primary' disabled={ note.etitle.length < 3 } onClick={ handleClick }>Update Note</Button>\n                            </div>\n                        </div>\n                    </div>\n                </Modal>\n                <div className='row my-3'>\n                        <h2>Your Notes</h2>\n                        { notes.length === 0 && 'No Notes to display' }\n                        { notes.map((note: { _id: React.Key | null | undefined; }) => {\n                            return <NoteItem key={ note._id } updateNote={ updateNote } showAlert={ props.showAlert } note={ note } />\n                        }) }\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Notes;","import React from 'react';\nimport AddNote from './AddNote';\nimport Notes from './Notes';\n\nconst Home = (props: { showAlert: any; }) => {\n    const { showAlert } = props;\n\n    return (\n        <div>\n            <div className='container' style={{ width: '80%' }}>\n                <Notes showAlert={ showAlert }/>\n            </div>\n            <AddNote showAlert={ showAlert }/>\n        </div>\n    );\n};\n\nexport default Home;","import NoteContext from './NoteContext';  // Import our context\nimport React, { useState } from 'react';\n\nconst NoteState = (props: { children: string | number | boolean | React.ReactFragment | React.ReactPortal | React.ReactElement<any, string | React.JSXElementConstructor<any>> | null | undefined; }) => {\n  // Declare the server host\n  const host = 'http://localhost:5001';\n\n  // Declare an object array\n  const notesInitial: any[] | (() => any[]) = [];\n\n  // Inititalized notes as object\n  const [notes, setNotes] = useState(notesInitial);\n\n  // API call to fetch all notes using GET:\n  const getNotes = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: \"GET\",\n      // @ts-ignore\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"authToken\"),\n      },\n    });\n    const json = await response.json();\n\n    // Update notes object and passs as array to Notes.js via context API\n    setNotes(json);\n  };\n\n\n  // API call to add a note using POST\n  /* addNote function will take title, desc & tag in request body\n  user.id will be inserted by backend through authToken\n  note.id will be generated automatically by mongo */\n  const addNote = async (title: string, description: string | null, tag: string | null) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      // @ts-ignore\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"authToken\"),\n      },\n      body: JSON.stringify({ title, description, tag }),\n    });\n    const note = await response.json();\n\n    // Use concat (not push) as it appends new item to array\n    setNotes(notes.concat(note));\n  };\n\n  // API call to delete a note using DELETE\n  const deleteNote = async (id: string) => {\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      // @ts-ignore\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"authToken\"),\n      },\n    });\n    const json = await response.json();\n    // console.log(json);\n\n    /* API call removes note from DB and UI. We then pass a filter function to all the existing notes and filter\n    out the note id that does not match the deleted note. */\n    const newNotes = notes.filter((note) => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  // Edit a note:\n  const editNote = async (id: string, title: string, description: string | null, tag: string | null) => {\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      // @ts-ignore\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"authToken\"),\n      },\n      body: JSON.stringify({ title, description, tag }),\n    });\n    // const json = await response.json()\n\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n\n  return (\n    <NoteContext.Provider\n      value={{\n        notes,\n        setNotes,\n        addNote,\n        deleteNote,\n        editNote,\n        getNotes,\n      }}\n    >\n      {props.children}\n    </NoteContext.Provider>\n  );\n}\n\nexport default NoteState;","import React from 'react';\n\nconst Alert = (props: { alert: { type: any; msg: string | number | boolean | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactFragment | React.ReactPortal | null | undefined; }; }) => {\n    const capitalize = (word: string) => {\n        if(word === 'danger') {\n            word = 'error';\n        }\n        const lower: string = word.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    };\n\n    return (\n        <div style={{ height: '50px' }}>\n            {\n                props.alert \n                &&\n                    <div className={ `alert alert-${props.alert.type} alert-dismissible fade show` } role='alert'>\n                        <strong>{ capitalize(props.alert.type) }</strong>\n                : \n                    { props.alert.msg }\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default Alert;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\n\n\nconst Login = (props: { showAlert: (arg0: string, arg1: string) => void; }) => {\n\n    // Declare server host\n    const host = 'http://localhost:5001';\n    const [credentials, setCredentials] = useState({ email: '', password: '' });\n    const navigate = useNavigate();\n\n  const handleSubmit = async (e: { preventDefault: () => void; }) => {\n    e.preventDefault();\n    const response = await fetch(`${host}/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: credentials.email,\n        password: credentials.password,\n      }),\n    });\n    const json = await response.json();\n    // console.log(json);\n    if (json.success) {\n      localStorage.setItem('authToken', json.authToken);\n      navigate('/');\n      props.showAlert('Logged in successfully!', 'success');\n    } else {\n      props.showAlert('Invalid credentials!', 'danger');\n    }\n  };\n\n  const onChange = (e: { target: { name: any; value: any; }; }) => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <Container className='mt-3' style={{ width: '70%' }}>\n        <Form onSubmit={ handleSubmit }>\n            <h2>Log In to Continue</h2>\n            <Form.Group className='mb-3'>\n                <Form.Label>Email address</Form.Label>\n                <Form.Control type='email' value={ credentials.email } id='email' name='email' onChange={ onChange }  autoComplete='off' aria-describedby='emailHelp' />\n                <Form.Text id='emailHelp' className='tex-muted'>We'll never share your email address with anyone</Form.Text>\n            </Form.Group>\n            <Form.Group className='mb-3'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control type='password' value={ credentials.password } id='password' name='password' onChange={ onChange } autoComplete='off' />\n            </Form.Group>\n            <Button type='submit' variant='primary'>Submit</Button>\n        </Form>\n    </Container>\n  );\n};\n\n\nexport default Login;","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\n\nconst Signup = (props: { showAlert: (arg0: string, arg1: string) => void; }) => {\n\n    // Declare server host\n    const host = 'http://localhost:5001';\n\n    // Set state of input text of form\n    const [credentials, setCredentials] = useState({\n        name: '',\n        email: '',\n        password: '',\n        cpassword: '',\n    });\n\n    // Confirm password\n    const [confirmPwd, setConfirmPwd] = useState('');\n\n    // Set variable to redirect pages\n    const navigate = useNavigate();\n\n    // POST request to update values of credentials\n    const handleSubmit = async (e: { preventDefault: () => void; }) => {\n        e.preventDefault();\n        if(credentials.password !== credentials.cpassword) {\n            setConfirmPwd('Password does not match');\n        } else {\n            const { name, email, password } = credentials;\n            const response = await fetch(`${host}/api/auth/createuser`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    name,\n                    email,\n                    password\n                })\n            });\n\n            const json = await response.json();\n            if(json.success) {\n                localStorage.setItem('authToken', json.authToken);\n                navigate('/');\n                props.showAlert('Account created successfully!', 'success');\n            } else {\n                props.showAlert('Invalid details', 'danger');\n            }\n        }\n    };\n\n    // To update state of text as user types\n    const onChange = (e: { target: { name: any; value: any; }; }) => {\n        setCredentials({\n            ...credentials,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    return (\n        <Container className='mt-3' style={{ width: '70%' }}>\n            <h2>Sign Up Here</h2>\n            <Form onSubmit={ handleSubmit }>\n                <Form.Group className='mb-3'>\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type='text' id='name' name='name' onChange={ onChange } aria-describedby='emailHelp' minLength={ 3 } required />\n                </Form.Group>\n                <Form.Group className='mb-3'>\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type='email' id='email' name='email' onChange={ onChange } aria-describedby='emailHelp' required />\n                    <Form.Text id='emailHelp' className='text-muted'>We'll never share your email address with anyone</Form.Text>\n                </Form.Group>\n                <Form.Group className='mb-3'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' id='password' name='password' onChange={ onChange } minLength={ 8 } autoComplete='off' required />\n                    <Form.Text id='emailHelp' className='text-muted'>Password must be at least 8 characters</Form.Text>\n                </Form.Group>\n                <Form.Group className='mb-3'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' id='cpassword' name='cpassword' onChange={ onChange } minLength={ 8 } autoComplete='off' required />\n                    <Form.Text id='confirmPwd' style={{ color: 'red' }}>{ confirmPwd }</Form.Text>\n                </Form.Group>\n                <Button type='submit' variant='primary'disabled={ credentials.password.length < 8 || credentials.cpassword.length < 8 }>Submit</Button>\n            </Form>\n        </Container>\n    );\n};\n\nexport default Signup;","import './App.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Header from './components/Navbar';\nimport About from './components/About';\nimport Home from './components/Home';\nimport NoteState from './context/NoteState';\nimport Alert from './components/Alert';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\ninterface Alert {\n    msg: string;\n    type: string;\n}\n\nconst App: React.FC = () => {\n    // Set initial state for alert as null\n    const [alert, setAlert] = useState<{ msg: string; type: string } | null>(null);\n\n    // Function to show alert which takes 2 args, msg & type\n    const showAlert = (message: string, type: string) => {\n        setAlert({\n            msg: message,\n            type: type,\n        });\n        setTimeout(() => {\n        setAlert(null);\n        }, 2500);\n    };\n\n  return (\n    <>\n      {/* Use NoteState so any child will use context */}\n      <NoteState>\n        <Router>\n          <Header />\n          {/* @ts-ignore */}\n          <Alert alert={alert} />\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<Home showAlert={showAlert} />} />\n              <Route path=\"/about\" element={<About />} />\n              <Route path=\"/login\" element={<Login showAlert={showAlert} />} />\n              <Route\n                path=\"/signup\"\n                element={<Signup showAlert={showAlert} />}\n              />\n            </Routes>\n          </div>\n        </Router>\n      </NoteState>\n    </>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}